0 info it worked if it ends with ok
1 verbose cli [ 'node', '/Users/paulryan/local/bin/npm', 'publish' ]
2 info using npm@2.1.6
3 info using node@v0.10.24
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/paulryan/Documents/projects/deepHas',
7 silly cache add   type: 'directory' }
8 verbose tar pack [ '/Users/paulryan/.npm/deephas/1.0.0/package.tgz',
8 verbose tar pack   '/Users/paulryan/Documents/projects/deepHas' ]
9 verbose tarball /Users/paulryan/.npm/deephas/1.0.0/package.tgz
10 verbose folder /Users/paulryan/Documents/projects/deepHas
11 info prepublish deephas@1.0.0
12 verbose addLocalTarball adding from inside cache /Users/paulryan/.npm/deephas/1.0.0/package.tgz
13 silly cache afterAdd deephas@1.0.0
14 verbose afterAdd /Users/paulryan/.npm/deephas/1.0.0/package/package.json not in flight; writing
15 verbose afterAdd /Users/paulryan/.npm/deephas/1.0.0/package/package.json written
16 silly publish { name: 'deephas',
16 silly publish   version: '1.0.0',
16 silly publish   description: 'test for existence of nested object key and optionally return that key',
16 silly publish   main: 'deepHas.js',
16 silly publish   scripts: { test: './runTests.sh' },
16 silly publish   repository: { type: 'git', url: 'git@github.com:sharpred/deepHas.git' },
16 silly publish   keywords: [ 'nested', 'object', 'key' ],
16 silly publish   author: { name: 'Paul Ryan', email: 'paul.ryan@stepupsoftware.co.uk' },
16 silly publish   license: 'MIT',
16 silly publish   bugs: { url: 'https://github.com/sharpred/deepHas/issues' },
16 silly publish   homepage: 'https://github.com/sharpred/deepHas',
16 silly publish   devDependencies: { should: '^6.0.1' },
16 silly publish   readme: '# deepHas\n\ntest for existence of nested object key and optionally return that key\n\n##Installation\nnpm install deephas\n\nor just drop deepHas.js into your project.\n\n##Usage\n\n`dh = require("deepHas")`\n`var obj = {"some": {"nested": {"property":""your value here"}}};`\n\n### dh.hasProperty(obj, \'some.nested.property\')\n\nReturns true or false if \'some.nested.property\' exists or not. In the above example returns true.\n\n### dh.getProperty(obj, \'some.nested.property\') \n\nReturns the value or undefined if it does not exist.  In the above example returns "your value here"',
16 silly publish   readmeFilename: 'README.md',
16 silly publish   gitHead: 'dfb59d4c47737ad362f7a038fd25bdc5c37bca51',
16 silly publish   _id: 'deephas@1.0.0',
16 silly publish   _shasum: '6e36969cb7133d229a951a25a7dbdf38a43d6da2',
16 silly publish   _from: '.' }
17 verbose mapToRegistry name deephas
18 verbose mapToRegistry uri https://registry.npmjs.org/deephas
19 verbose publish registryBase https://registry.npmjs.org/
20 verbose request on initialization, where is /deephas
21 verbose request after pass 1, where is /deephas
22 verbose request url raw /deephas
23 verbose request resolving registry [ 'https://registry.npmjs.org/', './deephas' ]
24 verbose request after pass 2, where is https://registry.npmjs.org/deephas
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 22:15:17
27 verbose request using bearer token for auth
28 verbose request id 74a943dd4d4ae1ee
29 http request PUT https://registry.npmjs.org/deephas
30 http 403 https://registry.npmjs.org/deephas
31 verbose headers { 'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '95',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   date: 'Wed, 06 May 2015 21:15:17 GMT',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   connection: 'keep-alive',
31 verbose headers   'x-served-by': 'cache-lhr6323-LHR',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1430946917.246351,VS0,VE621' }
32 error publish Failed PUT 403
33 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : deephas
33 verbose stack     at RegClient.<anonymous> (/Users/paulryan/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
33 verbose stack     at Request._callback (/Users/paulryan/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
33 verbose stack     at Request.self.callback (/Users/paulryan/local/lib/node_modules/npm/node_modules/request/request.js:364:22)
33 verbose stack     at Request.EventEmitter.emit (events.js:98:17)
33 verbose stack     at Request.<anonymous> (/Users/paulryan/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
33 verbose stack     at Request.EventEmitter.emit (events.js:117:20)
33 verbose stack     at IncomingMessage.<anonymous> (/Users/paulryan/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
33 verbose stack     at IncomingMessage.EventEmitter.emit (events.js:117:20)
33 verbose stack     at _stream_readable.js:920:16
33 verbose stack     at process._tickCallback (node.js:415:13)
34 verbose statusCode 403
35 verbose pkgid deephas
36 verbose cwd /Users/paulryan/Documents/projects/deepHas
37 error Darwin 14.3.0
38 error argv "node" "/Users/paulryan/local/bin/npm" "publish"
39 error node v0.10.24
40 error npm  v2.1.6
41 error code E403
42 error "You cannot publish over the previously published version 1.0.0." : deephas
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
